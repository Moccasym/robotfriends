{"ast":null,"code":"var _jsxFileName = \"/Users/Felix/Documents/GitHub/react221/robotfriends/src/containers/App.js\";\n//App is our main conponent that puts together the Cardlist and the searchbox as well as the header\n//This way you can integrate coponents together to form molecules \n\nimport React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\n//import { robots } from \"./robots\";\nimport Searchbox from \"../components/Searchbox\";\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\n//Using Class to be able to create a constructor function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  // the constructor method is for creating and initializing an object\n  constructor() {\n    super();\n    // State is something that can change => here you search for robot names, so the robots change that are displayed and the searchfield content\n    // Creates an event everytime someone writes into the searchbox and saves the value typed\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n\n  //when the App mounted the site do this \n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n    //this.setState({ robots: robots})\n  }\n\n  render() {\n    const {\n      robots,\n      searchfield\n    } = this.state;\n    const filteredRobots = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    console.log(filteredRobots);\n    return (\n      /*#__PURE__*/\n      // The component returns a set of components -> the heading, the dynamic searchbox with it's function and the cardlist, which includes the cards\n      _jsxDEV(\"div\", {\n        className: \"tc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"f1\",\n          children: \"RobotFriends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Searchbox, {\n          searchChange: this.onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n          children: /*#__PURE__*/_jsxDEV(CardList, {\n            robots: filteredRobots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    );\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","Searchbox","Scroll","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","name","toLowerCase","includes","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["/Users/Felix/Documents/GitHub/react221/robotfriends/src/containers/App.js"],"sourcesContent":["//App is our main conponent that puts together the Cardlist and the searchbox as well as the header\n//This way you can integrate coponents together to form molecules \n\nimport React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\n//import { robots } from \"./robots\";\nimport Searchbox from \"../components/Searchbox\";\nimport './App.css';\nimport Scroll from '../components/Scroll'\n\n\n//Using Class to be able to create a constructor function\nclass App extends Component {\n    // the constructor method is for creating and initializing an object\n    constructor() {\n        super()\n        // State is something that can change => here you search for robot names, so the robots change that are displayed and the searchfield content\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    //when the App mounted the site do this \n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=> {\n                return response.json();\n            })\n            .then(users => {\n                this.setState({robots: users})\n            })\n        //this.setState({ robots: robots})\n    }\n\n    // Creates an event everytime someone writes into the searchbox and saves the value typed\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const { robots, searchfield } = this.state; \n        const filteredRobots = robots.filter(robots => {\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        console.log(filteredRobots);\n        return (\n            // The component returns a set of components -> the heading, the dynamic searchbox with it's function and the cardlist, which includes the cards\n            <div className='tc'>\n            <h1 className=\"f1\">RobotFriends</h1>\n            <Searchbox searchChange={this.onSearchChange}/>\n            <Scroll>\n                <CardList robots = {filteredRobots}/>\n            </Scroll>\n            </div>\n    )\n}\n}\n\nexport default App;"],"mappings":";AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,sBAAsB;;AAGzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASN,SAAS,CAAC;EACxB;EACAO,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE;IACP;IAmBJ;IAAA,KACAC,cAAc,GAAIC,KAAK,IAAK;MACxB,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IACtD,CAAC;IArBG,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE,EAAE;MACVJ,WAAW,EAAE;IACjB,CAAC;EACL;;EAEA;EACAK,iBAAiBA,CAAA,EAAG;IAChBC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAG;MACb,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDF,IAAI,CAACG,KAAK,IAAI;MACX,IAAI,CAACX,QAAQ,CAAC;QAACK,MAAM,EAAEM;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC;IACN;EACJ;;EAOAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEP,MAAM;MAAEJ;IAAY,CAAC,GAAG,IAAI,CAACG,KAAK;IAC1C,MAAMS,cAAc,GAAGR,MAAM,CAACS,MAAM,CAACT,MAAM,IAAI;MAC3C,OAAOA,MAAM,CAACU,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAAChB,WAAW,CAACe,WAAW,EAAE,CAAC;IACxE,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAACN,cAAc,CAAC;IAC3B;MAAA;MACI;MACAlB,OAAA;QAAKyB,SAAS,EAAC,IAAI;QAAAC,QAAA,gBACnB1B,OAAA;UAAIyB,SAAS,EAAC,IAAI;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACpC9B,OAAA,CAACH,SAAS;UAACkC,YAAY,EAAE,IAAI,CAAC5B;QAAe;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC/C9B,OAAA,CAACF,MAAM;UAAA4B,QAAA,eACH1B,OAAA,CAACJ,QAAQ;YAACc,MAAM,EAAIQ;UAAe;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACH;EAElB;AACA;AAEA,eAAe7B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}